{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nnsou\\\\OneDrive\\\\Ambiente de Trabalho\\\\Code_for_All React\\\\reactor\\\\week3\\\\covid-visualizer2\\\\src\\\\WorldMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Circle } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { getCountryData } from './GetAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldMap = ({\n  activeTab,\n  filteredCountries = []\n}) => {\n  _s();\n  const [focusCountry, setFocusCountry] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getCountryData();\n        const processedData = data.map(country => ({\n          lat: country.countryInfo.lat,\n          long: country.countryInfo.long,\n          radius: activeTab === 'cases' ? country.cases : activeTab === 'recovered' ? country.recovered : country.deaths\n        }));\n        processedData();\n      } catch (error) {}\n    };\n    fetchData();\n  }, [activeTab]);\n  useEffect(() => {\n    if (filteredCountries.length === 1) {\n      setFocusCountry(filteredCountries[0]);\n    } else {\n      setFocusCountry(null);\n    }\n  }, [filteredCountries]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [20, 0],\n    zoom: 2.5,\n    style: {\n      height: '100%',\n      width: '100%',\n      boxShadow: '0 0 10px rgba(200, 200, 200, 2'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), filteredCountries.map((data, index) => /*#__PURE__*/_jsxDEV(Circle, {\n      center: [data.lat, data.long],\n      pathOptions: {\n        fillColor: 'blue',\n        color: 'blue'\n      },\n      radius: Math.sqrt(data.radius) * 100\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), focusCountry && /*#__PURE__*/_jsxDEV(Circle, {\n      center: [focusCountry.lat, focusCountry.long],\n      pathOptions: {\n        fillColor: 'red',\n        color: 'red'\n      },\n      radius: Math.sqrt(focusCountry.radius) * 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldMap, \"IOfdVBdRSf1h11tujB8ekCe4QBc=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Circle","getCountryData","jsxDEV","_jsxDEV","WorldMap","activeTab","filteredCountries","_s","focusCountry","setFocusCountry","fetchData","data","processedData","map","country","lat","countryInfo","long","radius","cases","recovered","deaths","error","length","center","zoom","style","height","width","boxShadow","children","url","fileName","_jsxFileName","lineNumber","columnNumber","index","pathOptions","fillColor","color","Math","sqrt","_c","$RefreshReg$"],"sources":["C:/Users/nnsou/OneDrive/Ambiente de Trabalho/Code_for_All React/reactor/week3/covid-visualizer2/src/WorldMap.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { MapContainer, TileLayer, Circle } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css'; \r\nimport { getCountryData } from './GetAPI';\r\n\r\n\r\nconst WorldMap = ({ activeTab, filteredCountries = [] }) => {\r\n  const [focusCountry, setFocusCountry] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await getCountryData();\r\n\r\n        const processedData = data.map((country) => ({\r\n          lat: country.countryInfo.lat,\r\n          long: country.countryInfo.long,\r\n          radius: activeTab === 'cases' \r\n            ? country.cases \r\n            : activeTab === 'recovered' \r\n              ? country.recovered\r\n              : country.deaths,\r\n        }));\r\n        processedData()\r\n      } catch (error) {\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [activeTab]);\r\n\r\n  useEffect(() => {\r\n    if (filteredCountries.length === 1) {\r\n      setFocusCountry(filteredCountries[0]);\r\n    } else {\r\n      setFocusCountry(null);\r\n    }\r\n  }, [filteredCountries]);\r\n\r\n  return (\r\n    <MapContainer center={[20, 0]} zoom={2.5} style={{ height: '100%', width: '100%', boxShadow: '0 0 10px rgba(200, 200, 200, 2' }}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n      {filteredCountries.map((data, index) => (\r\n        <Circle\r\n        key={index}\r\n        center={[data.lat, data.long]}\r\n        pathOptions={{ fillColor: 'blue', color: 'blue'}}\r\n        radius={Math.sqrt(data.radius) *100}\r\n      />\r\n      ))}\r\n      {focusCountry && (\r\n        <Circle\r\n          center={[focusCountry.lat, focusCountry.long]}\r\n          pathOptions={{fillColor: 'red', color: 'red'}}\r\n          radius={Math.sqrt(focusCountry.radius) *10}\r\n        />\r\n      )}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default WorldMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}