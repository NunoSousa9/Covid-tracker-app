{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nnsou\\\\OneDrive\\\\Ambiente de Trabalho\\\\Code_for_All React\\\\reactor\\\\week3\\\\covid-visualizer2\\\\src\\\\DoughnutChart.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { Chart } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoughnutChart = ({\n  cases,\n  recovered,\n  deaths\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    const ctx = chartRef.current.getContext('2d');\n    const recoveredValue = recovered || 0;\n    if (ctx) new Chart(ctx, {\n      type: \"doughnut\",\n      data: {\n        labels: [\"Cases\", \"Recovered\", \"Deaths\"],\n        datasets: [{\n          label: \"COVID-19 Cases\",\n          data: [cases, recoveredValue, deaths],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n        }]\n      },\n      options: {\n        responsive: true\n      }\n    });\n  }, [cases, recovered, deaths]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n_s(DoughnutChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["useEffect","useRef","Chart","jsxDEV","_jsxDEV","DoughnutChart","cases","recovered","deaths","_s","chartRef","chartInstance","ctx","current","getContext","recoveredValue","type","data","labels","datasets","label","backgroundColor","options","responsive","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nnsou/OneDrive/Ambiente de Trabalho/Code_for_All React/reactor/week3/covid-visualizer2/src/DoughnutChart.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\n\r\n\r\nconst DoughnutChart = ({cases, recovered, deaths}) => {\r\n    const chartRef = useRef(null);\r\n    const chartInstance = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const ctx = chartRef.current.getContext('2d');\r\n\r\n        const recoveredValue = recovered || 0;\r\n\r\n        if(ctx) \r\n        new Chart(ctx, {\r\n            type: \"doughnut\",\r\n            data: {\r\n                labels: [\"Cases\", \"Recovered\", \"Deaths\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"COVID-19 Cases\",\r\n                        data: [cases, recoveredValue, deaths],\r\n                        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n                    },\r\n                ],\r\n            },\r\n            options: {\r\n                responsive: true,\r\n            },\r\n        });\r\n    }, [cases, recovered, deaths]);\r\n\r\n    return <canvas ref= {chartRef} />;\r\n};\r\n\r\nexport default DoughnutChart;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,KAAK,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,aAAa,GAAGA,CAAC;EAACC,KAAK;EAAEC,SAAS;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMU,aAAa,GAAGV,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACZ,MAAMY,GAAG,GAAGF,QAAQ,CAACG,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAE7C,MAAMC,cAAc,GAAGR,SAAS,IAAI,CAAC;IAErC,IAAGK,GAAG,EACN,IAAIV,KAAK,CAACU,GAAG,EAAE;MACXI,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;QACFC,MAAM,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,CAAC;QACxCC,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,gBAAgB;UACvBH,IAAI,EAAE,CAACX,KAAK,EAAES,cAAc,EAAEP,MAAM,CAAC;UACrCa,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS;QACrD,CAAC;MAET,CAAC;MACDC,OAAO,EAAE;QACLC,UAAU,EAAE;MAChB;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,CAACjB,KAAK,EAAEC,SAAS,EAAEC,MAAM,CAAC,CAAC;EAE9B,oBAAOJ,OAAA;IAAQoB,GAAG,EAAGd;EAAS;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC,CAAC;AAACnB,EAAA,CA7BIJ,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA+BnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}