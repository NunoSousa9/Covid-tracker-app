{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nnsou\\\\OneDrive\\\\Ambiente de Trabalho\\\\Code_for_All React\\\\reactor\\\\week3\\\\covid-visualizer2\\\\src\\\\VaccineChart.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { Chart } from \"chart.js\";\nimport { getVaccineData } from \"./GetAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VaccineChart = ({\n  selectedCountry\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    let chart = null;\n    const fetchVaccineData = async () => {\n      let selectedCountryVaccineData;\n      try {\n        const vaccineData = await getVaccineData();\n        selectedCountryVaccineData = vaccineData.find(data => data.country === selectedCountry);\n        if (selectedCountryVaccineData) {\n          const dates = Object.keys(selectedCountryVaccineData.timeline);\n          const vaccinationData = Object.values(selectedCountryVaccineData.timeline);\n          const ctx = chartRef.current.getContext('2d');\n          if (ctx) {\n            if (chartInstance.current) {\n              chartInstance.current.destroy();\n            }\n            chart = new Chart(ctx, {\n              type: 'line',\n              data: {\n                labels: dates,\n                datasets: [{\n                  label: 'Vaccination',\n                  data: vaccinationData,\n                  borderColor: 'blue',\n                  borderWidth: 1,\n                  fill: true\n                }]\n              },\n              options: {}\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching vaccine data:', error);\n      }\n    };\n    fetchVaccineData();\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    };\n  }, [selectedCountry]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vaccination Coverage Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      width: 200,\n      height: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(VaccineChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = VaccineChart;\nexport default VaccineChart;\nvar _c;\n$RefreshReg$(_c, \"VaccineChart\");","map":{"version":3,"names":["useEffect","useRef","Chart","getVaccineData","jsxDEV","_jsxDEV","VaccineChart","selectedCountry","_s","chartRef","chartInstance","chart","fetchVaccineData","selectedCountryVaccineData","vaccineData","find","data","country","dates","Object","keys","timeline","vaccinationData","values","ctx","current","getContext","destroy","type","labels","datasets","label","borderColor","borderWidth","fill","options","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","_c","$RefreshReg$"],"sources":["C:/Users/nnsou/OneDrive/Ambiente de Trabalho/Code_for_All React/reactor/week3/covid-visualizer2/src/VaccineChart.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\nimport { getVaccineData } from \"./GetAPI\";\r\n\r\nconst VaccineChart = ({ selectedCountry }) => {\r\n    const chartRef = useRef(null);\r\n    const chartInstance = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let chart = null;\r\n\r\n        const fetchVaccineData = async () => {\r\n            let selectedCountryVaccineData;\r\n            try {\r\n                const vaccineData = await getVaccineData();\r\n                selectedCountryVaccineData = vaccineData.find(\r\n                    (data) => data.country === selectedCountry\r\n                );\r\n\r\n            if(selectedCountryVaccineData) {\r\n                const dates = Object.keys(selectedCountryVaccineData.timeline);\r\n                const vaccinationData = Object.values(selectedCountryVaccineData.timeline);\r\n\r\n                const ctx = chartRef.current.getContext('2d');\r\n\r\n                if(ctx) {\r\n                    if (chartInstance.current) {\r\n                        chartInstance.current.destroy();\r\n                    }\r\n\r\n                    chart = new Chart(ctx, {\r\n                        type: 'line',\r\n                        data: {\r\n                            labels: dates,\r\n                            datasets: [\r\n                                {\r\n                                    label: 'Vaccination',\r\n                                    data: vaccinationData,\r\n                                    borderColor: 'blue',\r\n                                    borderWidth: 1,\r\n                                    fill: true,\r\n                                },\r\n                            ],\r\n                        },\r\n                        options: {},\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching vaccine data:', error);\r\n        }\r\n    };\r\n\r\n    fetchVaccineData();\r\n\r\n    return () => {\r\n        if(chart) {\r\n            chart.destroy();\r\n        }\r\n    };\r\n}, [selectedCountry]);\r\n\r\nreturn (\r\n    <div>\r\n        <h1>Vaccination Coverage Chart</h1>\r\n        <canvas ref={chartRef} width={200} height={100}></canvas>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default VaccineChart;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,KAAK,QAAQ,UAAU;AAChC,SAASC,cAAc,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMS,aAAa,GAAGT,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACZ,IAAIW,KAAK,GAAG,IAAI;IAEhB,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAIC,0BAA0B;MAC9B,IAAI;QACA,MAAMC,WAAW,GAAG,MAAMX,cAAc,CAAC,CAAC;QAC1CU,0BAA0B,GAAGC,WAAW,CAACC,IAAI,CACxCC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAKV,eAC/B,CAAC;QAEL,IAAGM,0BAA0B,EAAE;UAC3B,MAAMK,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACP,0BAA0B,CAACQ,QAAQ,CAAC;UAC9D,MAAMC,eAAe,GAAGH,MAAM,CAACI,MAAM,CAACV,0BAA0B,CAACQ,QAAQ,CAAC;UAE1E,MAAMG,GAAG,GAAGf,QAAQ,CAACgB,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;UAE7C,IAAGF,GAAG,EAAE;YACJ,IAAId,aAAa,CAACe,OAAO,EAAE;cACvBf,aAAa,CAACe,OAAO,CAACE,OAAO,CAAC,CAAC;YACnC;YAEAhB,KAAK,GAAG,IAAIT,KAAK,CAACsB,GAAG,EAAE;cACnBI,IAAI,EAAE,MAAM;cACZZ,IAAI,EAAE;gBACFa,MAAM,EAAEX,KAAK;gBACbY,QAAQ,EAAE,CACN;kBACIC,KAAK,EAAE,aAAa;kBACpBf,IAAI,EAAEM,eAAe;kBACrBU,WAAW,EAAE,MAAM;kBACnBC,WAAW,EAAE,CAAC;kBACdC,IAAI,EAAE;gBACV,CAAC;cAET,CAAC;cACDC,OAAO,EAAE,CAAC;YACd,CAAC,CAAC;UACN;QACJ;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;IAEDxB,gBAAgB,CAAC,CAAC;IAElB,OAAO,MAAM;MACT,IAAGD,KAAK,EAAE;QACNA,KAAK,CAACgB,OAAO,CAAC,CAAC;MACnB;IACJ,CAAC;EACL,CAAC,EAAE,CAACpB,eAAe,CAAC,CAAC;EAErB,oBACIF,OAAA;IAAAiC,QAAA,gBACIjC,OAAA;MAAAiC,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCrC,OAAA;MAAQsC,GAAG,EAAElC,QAAS;MAACmC,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAAClC,EAAA,CAhEIF,YAAY;AAAAwC,EAAA,GAAZxC,YAAY;AAkElB,eAAeA,YAAY;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}