{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nnsou\\\\OneDrive\\\\Ambiente de Trabalho\\\\Code_for_All React\\\\reactor\\\\week3\\\\covid-visualizer2\\\\src\\\\CountryDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryDetails = () => {\n  _s();\n  const [countryData, setCountryData] = useState(null);\n  useEffect(() => {\n    const fetchCountryData = async () => {\n      try {\n        const response = await fetch('https://disease.sh/v3/covid-19/countries');\n        const data = await response.json();\n        const {\n          country,\n          countryInfo,\n          population,\n          continent,\n          cases,\n          recovered,\n          deaths\n        } = data;\n        const extractedData = {\n          country,\n          flag: countryInfo === null || countryInfo === void 0 ? void 0 : countryInfo.flag,\n          continent,\n          population,\n          cases,\n          recovered,\n          deaths\n        };\n        setCountryData(extractedData);\n      } catch {\n        console.error('Error fetching country data:', error);\n      }\n    };\n    fetchCountryData();\n  }, []);\n  if (!countryData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    country,\n    countryInfo,\n    population,\n    continent,\n    cases,\n    recovered,\n    deaths\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: flag,\n      alt: `${country} Flag`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Continent: \", continent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Population: \", population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"COVID-19 Stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cases: \", cases]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Recovered: \", recovered]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Deaths: \", deaths]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryDetails, \"niFgzD3tf5f0ThrBDA94ddhrxQY=\");\n_c = CountryDetails;\nexport default CountryDetails;\nvar _c;\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CountryDetails","_s","countryData","setCountryData","fetchCountryData","response","fetch","data","json","country","countryInfo","population","continent","cases","recovered","deaths","extractedData","flag","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/nnsou/OneDrive/Ambiente de Trabalho/Code_for_All React/reactor/week3/covid-visualizer2/src/CountryDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst CountryDetails = () => {\r\n\r\n    const [countryData, setCountryData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchCountryData = async () => {\r\n            try {\r\n                const response = await fetch ('https://disease.sh/v3/covid-19/countries');\r\n                const data = await response.json();\r\n\r\n                const {country, countryInfo, population, continent, cases, recovered, deaths} = data;\r\n\r\n                const extractedData = {\r\n                    country,\r\n                    flag: countryInfo?.flag,\r\n                    continent,\r\n                    population,\r\n                    cases,\r\n                    recovered,\r\n                    deaths\r\n                };\r\n\r\n                setCountryData(extractedData);\r\n            } catch {\r\n                console.error('Error fetching country data:', error);\r\n            }\r\n        };\r\n\r\n        fetchCountryData();\r\n    }, []);\r\n\r\n    if (!countryData) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    const {country, countryInfo, population, continent, cases, recovered, deaths} = data;\r\n\r\n    return (\r\n        <div>\r\n            <img src= {flag} alt={`${country} Flag`} />\r\n            <h1>{country}</h1>\r\n            <p>Continent: {continent}</p>\r\n            <p>Population: {population}</p>\r\n            <div>\r\n                <h2>COVID-19 Stats</h2>\r\n                <p>Cases: {cases}</p>\r\n                <p>Recovered: {recovered}</p>\r\n                <p>Deaths: {deaths}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountryDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}