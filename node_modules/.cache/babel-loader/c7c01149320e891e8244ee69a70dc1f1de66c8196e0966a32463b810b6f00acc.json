{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nnsou\\\\OneDrive\\\\Ambiente de Trabalho\\\\Code_for_All React\\\\reactor\\\\week3\\\\covid-visualizer2\\\\src\\\\CountryDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Chart } from \"chart.js\";\nimport { getCountryData, getCountryHistory } from './GetAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryDetails = () => {\n  _s();\n  const {\n    countryName\n  } = useParams();\n  const [countryData, setCountryData] = useState(null);\n  const [countryHistoricalData, setCountryHistoricalData] = useState(null);\n  useEffect(() => {\n    const fetchCountryData = async () => {\n      try {\n        const data = await getCountryData();\n        const selectedCoutry = data.find(country => country.country === countryName);\n        setCountryData(selectedCoutry);\n      } catch (error) {\n        console.error('Error fetching country data:', error);\n      }\n    };\n    fetchCountryData();\n  }, [countryName]);\n  useEffect(() => {\n    const fetchCountryHistoricalData = async () => {\n      try {\n        const data = await getCountryHistory(countryName);\n        setCountryHistoricalData(data.timeline);\n      } catch (error) {\n        console.error('Error fetching historical data:', error);\n      }\n    };\n    fetchCountryHistoricalData();\n  }, [countryName]);\n  useEffect(() => {\n    let chart = null;\n    if (countryHistoricalData) {\n      const dates = Object.keys(countryHistoricalData.cases);\n      const casesData = Object.keys(countryHistoricalData.cases);\n      const recoveredData = Object.keys(countryHistoricalData.recovered);\n      const deathsData = Object.keys(countryHistoricalData.deaths);\n      const ctx = document.getElementById('myChart2');\n      if (ctx) {\n        if (chart) {\n          chart.destroy();\n        }\n        chart = new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: dates,\n            datasets: [{\n              label: 'Cases',\n              data: casesData,\n              borderColor: 'blue',\n              borderWidth: 1,\n              fill: false\n            }, {\n              label: 'Recovered',\n              data: recoveredData,\n              borderColor: 'green',\n              borderWidth: 1,\n              fill: false\n            }, {\n              label: 'Deaths',\n              data: deathsData,\n              borderColor: 'red',\n              borderWidth: 1,\n              fill: false\n            }]\n          },\n          options: {\n            scales: {\n              x: {\n                ticks: {\n                  autoSkip: true,\n                  maxTicksLimit: 100000\n                }\n              },\n              y: {\n                beginAtZero: false\n              }\n            }\n          }\n        });\n      }\n    }\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    };\n  }, [countryHistoricalData]);\n  if (!countryData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    country,\n    countryInfo,\n    population,\n    continent,\n    cases,\n    recovered,\n    deaths\n  } = countryData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: countryInfo === null || countryInfo === void 0 ? void 0 : countryInfo.flag,\n      alt: `${country} Flag`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Continent: \", continent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Population: \", population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"COVID-19 Stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cases: \", cases]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Recovered: \", recovered || (recovered === 0 ? \"Data not available\" : recovered)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Deaths: \", deaths]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [countryData.country, \" Statistics\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"myChart2\",\n        width: \"400\",\n        height: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryDetails, \"RoGvEaj6JWfG3pg5AsWsnRs8Q80=\", false, function () {\n  return [useParams];\n});\n_c = CountryDetails;\nexport default CountryDetails;\nvar _c;\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","Chart","getCountryData","getCountryHistory","jsxDEV","_jsxDEV","CountryDetails","_s","countryName","countryData","setCountryData","countryHistoricalData","setCountryHistoricalData","fetchCountryData","data","selectedCoutry","find","country","error","console","fetchCountryHistoricalData","timeline","chart","dates","Object","keys","cases","casesData","recoveredData","recovered","deathsData","deaths","ctx","document","getElementById","destroy","type","labels","datasets","label","borderColor","borderWidth","fill","options","scales","x","ticks","autoSkip","maxTicksLimit","y","beginAtZero","children","fileName","_jsxFileName","lineNumber","columnNumber","countryInfo","population","continent","src","flag","alt","to","id","width","height","_c","$RefreshReg$"],"sources":["C:/Users/nnsou/OneDrive/Ambiente de Trabalho/Code_for_All React/reactor/week3/covid-visualizer2/src/CountryDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Chart } from \"chart.js\";\r\nimport { getCountryData, getCountryHistory } from './GetAPI';\r\n\r\nconst CountryDetails = () => {\r\n    const {countryName} = useParams();\r\n    const [countryData, setCountryData] = useState(null);\r\n    const [countryHistoricalData, setCountryHistoricalData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchCountryData = async () => {\r\n            try {\r\n                const data = await getCountryData();\r\n                const selectedCoutry = data.find(country => country.country === countryName);\r\n\r\n                setCountryData(selectedCoutry);\r\n            } catch (error) {\r\n                console.error('Error fetching country data:', error);\r\n            }\r\n        };\r\n\r\n        fetchCountryData();\r\n    }, [countryName]);\r\n\r\n    useEffect(() => {\r\n        const fetchCountryHistoricalData = async () => {\r\n            try {\r\n                const data = await getCountryHistory(countryName);\r\n                setCountryHistoricalData(data.timeline);\r\n            } catch (error) {\r\n                console.error('Error fetching historical data:', error);\r\n            }\r\n        };\r\n\r\n        fetchCountryHistoricalData();\r\n    }, [countryName]);\r\n\r\n\r\n    useEffect(() => {\r\n        let chart = null;\r\n\r\n        if(countryHistoricalData) {\r\n            const dates = Object.keys(countryHistoricalData.cases);\r\n            const casesData = Object.keys(countryHistoricalData.cases);\r\n            const recoveredData = Object.keys(countryHistoricalData.recovered);\r\n            const deathsData = Object.keys(countryHistoricalData.deaths);\r\n\r\n            const ctx = document.getElementById('myChart2');\r\n\r\n            if(ctx) {\r\n                if (chart) {\r\n                    chart.destroy();\r\n                  }\r\n            chart = new Chart(ctx, {\r\n                type: 'line',\r\n                data: {\r\n                    labels: dates,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Cases',\r\n                            data: casesData,\r\n                            borderColor: 'blue',\r\n                            borderWidth: 1,\r\n                            fill: false,\r\n                        },\r\n                        {\r\n                            label: 'Recovered',\r\n                            data: recoveredData,\r\n                            borderColor: 'green',\r\n                            borderWidth: 1,\r\n                            fill: false,\r\n                        },\r\n                        {\r\n                            label: 'Deaths',\r\n                            data: deathsData,\r\n                            borderColor: 'red',\r\n                            borderWidth: 1,\r\n                            fill: false,\r\n                        },\r\n                    ],\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        x: {\r\n                            ticks: {\r\n                                autoSkip: true,\r\n                                maxTicksLimit: 100000,\r\n                            },\r\n                        },\r\n                        y: {\r\n                            beginAtZero: false,\r\n                            \r\n                        },\r\n                    },\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n        return () => {\r\n            if(chart) {\r\n                chart.destroy();\r\n            }\r\n        \r\n\r\n    };\r\n    }, [countryHistoricalData]);\r\n    \r\n\r\n    if (!countryData) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    const {country, countryInfo, population, continent, cases, recovered, deaths} = countryData;\r\n\r\n    return (\r\n        <div>\r\n            <img src= {countryInfo?.flag} alt={`${country} Flag`} />\r\n            <br></br>\r\n            <br></br>\r\n            <h1>{country}</h1>\r\n            <p>Continent: {continent}</p>\r\n            <p>Population: {population}</p>\r\n            <div>\r\n                <br></br>\r\n                <br></br>\r\n                <h2>COVID-19 Stats</h2>\r\n                <p>Cases: {cases}</p>\r\n                <p>Recovered: {recovered || (recovered === 0 ? \"Data not available\" : recovered)}</p>\r\n                <p>Deaths: {deaths}</p>\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            <div> <Link to=\"/\">BACK</Link></div>\r\n            <div>\r\n                <h1>{countryData.country} Statistics</h1>\r\n                <canvas id=\"myChart2\" width=\"400\" height=\"200\"></canvas>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountryDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}