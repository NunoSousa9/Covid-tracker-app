{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nnsou\\\\OneDrive\\\\Ambiente de Trabalho\\\\Code_for_All React\\\\reactor\\\\week3\\\\covid-visualizer2\\\\src\\\\Countries\\\\CountryDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { getCountryData } from '../API/GetAPI';\nimport VaccineChart from \"./VaccineChart\";\nimport DoughnutChart from \"./DoughnutChart\";\nimport { formatNumberWithSpaces } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryDetails = () => {\n  _s();\n  const {\n    countryName\n  } = useParams();\n  const [countryData, setCountryData] = useState(null);\n  useEffect(() => {\n    const fetchCountryData = async () => {\n      try {\n        const data = await getCountryData();\n        const selectedCoutry = data.find(country => country.country === countryName);\n        setCountryData(selectedCoutry);\n      } catch (error) {\n        console.error('Error fetching country data:', error);\n      }\n    };\n    fetchCountryData();\n  }, [countryName]);\n  if (!countryData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    country,\n    countryInfo,\n    population,\n    continent,\n    cases,\n    recovered,\n    deaths\n  } = countryData;\n  const formatedPopulation = formatNumberWithSpaces(population);\n  const formatedCases = formatNumberWithSpaces(cases);\n  const formatedRecovered = recovered ? \"Data not available\" : formatNumberWithSpaces(recovered);\n  const formatedDeaths = formatNumberWithSpaces(deaths);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: countryInfo === null || countryInfo === void 0 ? void 0 : countryInfo.flag,\n      alt: `${country} Flag`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Continent: \", continent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Population: \", formatedPopulation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"COVID-19 Stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cases: \", c]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Recovered: \", recovered]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Deaths: \", deaths]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DoughnutChart, {\n        cases: cases,\n        recovered: recovered || 0,\n        deaths: deaths\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VaccineChart, {\n      selectedCountry: countryName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryDetails, \"j9IA79yIDnHeWSsdvInGXDler2M=\", false, function () {\n  return [useParams];\n});\n_c = CountryDetails;\nexport default CountryDetails;\nvar _c;\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","getCountryData","VaccineChart","DoughnutChart","formatNumberWithSpaces","jsxDEV","_jsxDEV","CountryDetails","_s","countryName","countryData","setCountryData","fetchCountryData","data","selectedCoutry","find","country","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","countryInfo","population","continent","cases","recovered","deaths","formatedPopulation","formatedCases","formatedRecovered","formatedDeaths","src","flag","alt","c","to","selectedCountry","_c","$RefreshReg$"],"sources":["C:/Users/nnsou/OneDrive/Ambiente de Trabalho/Code_for_All React/reactor/week3/covid-visualizer2/src/Countries/CountryDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getCountryData } from '../API/GetAPI';\r\nimport VaccineChart from \"./VaccineChart\";\r\nimport DoughnutChart from \"./DoughnutChart\";\r\nimport { formatNumberWithSpaces } from \"../utils\";\r\n\r\nconst CountryDetails = () => {\r\n    const {countryName} = useParams();\r\n    const [countryData, setCountryData] = useState(null);\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchCountryData = async () => {\r\n            try {\r\n                const data = await getCountryData();\r\n                const selectedCoutry = data.find(country => country.country === countryName);\r\n\r\n                setCountryData(selectedCoutry);\r\n            } catch (error) {\r\n                console.error('Error fetching country data:', error);\r\n            }\r\n        };\r\n\r\n        fetchCountryData();\r\n    }, [countryName]);\r\n\r\n\r\n\r\n    if (!countryData) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    const {country, countryInfo, population, continent, cases, recovered, deaths} = countryData;\r\n    const formatedPopulation = formatNumberWithSpaces(population);\r\n    const formatedCases = formatNumberWithSpaces(cases);\r\n    const formatedRecovered = recovered ? \"Data not available\" : formatNumberWithSpaces(recovered);\r\n    const formatedDeaths = formatNumberWithSpaces(deaths);\r\n\r\n    return (\r\n        <div>\r\n            <img src= {countryInfo?.flag} alt={`${country} Flag`} />\r\n            <br></br>\r\n            <br></br>\r\n            <h1>{country}</h1>\r\n            <p>Continent: {continent}</p>\r\n            <p>Population: {formatedPopulation}</p>\r\n            <div>\r\n                <br></br>\r\n                <br></br>\r\n                <h2>COVID-19 Stats</h2>\r\n                    <p>Cases: {c}</p>\r\n                    <p>Recovered: {recovered}</p>\r\n                    <p>Deaths: {deaths}</p>\r\n                <DoughnutChart cases={cases} recovered={recovered || 0} deaths={deaths}/>\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            <div> <Link to=\"/\">BACK</Link></div>\r\n            <VaccineChart selectedCountry={countryName} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountryDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}