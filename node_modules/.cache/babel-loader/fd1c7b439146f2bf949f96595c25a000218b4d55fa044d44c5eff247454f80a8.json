{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nnsou\\\\OneDrive\\\\Ambiente de Trabalho\\\\Code_for_All React\\\\reactor\\\\week3\\\\covid-visualizer2\\\\src\\\\Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = ({\n  activeTab\n}) => {\n  _s();\n  const [historicalData, setHistoricalData] = useState(null);\n  useEffect(() => {\n    const fetchHistoricalData = async () => {\n      try {\n        const response = await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=all');\n        const data = await response.json();\n        setHistoricalData(data);\n      } catch (error) {\n        console.error('Error fetching historical data:', error);\n      }\n    };\n    fetchHistoricalData();\n  }, []);\n  useEffect(() => {\n    let chart = null;\n    if (historicalData) {\n      const ctx = document.getElementById('myChart').getContext('2d');\n      if (chart) {\n        chart.destroy();\n      }\n      const datasetLabel = activeTab === 'cases' ? 'Cases' : activeTab === 'recovered' ? 'Recovered' : 'Deaths';\n      const filteredData = activeTab === 'recovered' ? Object.entries(historicalData[activeTab]).filter(([date, value]) => {\n        return value != null && new Date(date) <= new Date('2021-04-08');\n      }).reduce((acc, [date, value]) => {\n        acc[date] = value;\n        return acc;\n      }, {}) : historicalData[activeTab];\n      chart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: Object.keys(filteredData),\n          datasets: [{\n            label: datasetLabel,\n            data: Object.values(filteredData),\n            borderColor: activeTab === 'cases' ? 'cyan' : activeTab === 'recovered' ? 'green' : 'red',\n            fill: true,\n            backgroundColor: activeTab === 'cases' ? 'lightblue' : activeTab === 'recovered' ? 'yellow' : 'gray'\n          }]\n        },\n        options: {}\n      });\n    }\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    };\n  }, [historicalData, activeTab]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '500px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"FScUJ42MDx+0fnk7CLMeRgY/HJ0=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useEffect","useState","Chart","jsxDEV","_jsxDEV","Graph","activeTab","_s","historicalData","setHistoricalData","fetchHistoricalData","response","fetch","data","json","error","console","chart","ctx","document","getElementById","getContext","destroy","datasetLabel","filteredData","Object","entries","filter","date","value","Date","reduce","acc","type","labels","keys","datasets","label","values","borderColor","fill","backgroundColor","options","style","width","height","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nnsou/OneDrive/Ambiente de Trabalho/Code_for_All React/reactor/week3/covid-visualizer2/src/Graph.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\n\r\nconst Graph = ({ activeTab }) => {\r\n  const [historicalData, setHistoricalData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchHistoricalData = async () => {\r\n      try {\r\n        const response = await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=all');\r\n        const data = await response.json();\r\n\r\n        setHistoricalData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching historical data:', error);\r\n      }\r\n    };\r\n\r\n    fetchHistoricalData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let chart = null;\r\n\r\n    if(historicalData) {\r\n\r\n      const ctx = document.getElementById('myChart').getContext('2d');\r\n      if(chart) {\r\n        chart.destroy();\r\n      }\r\n\r\n      const datasetLabel =\r\n        activeTab === 'cases' ? 'Cases'\r\n        : activeTab === 'recovered' ? 'Recovered'\r\n        : 'Deaths';\r\n\r\n      const filteredData =\r\n        activeTab === 'recovered'\r\n        ? Object.entries(historicalData[activeTab])\r\n          .filter(([date, value]) => {\r\n            return value != null && new Date(date) <= new Date('2021-04-08');\r\n          }) \r\n          .reduce((acc, [date, value]) => {\r\n            acc[date] = value;\r\n            return acc;\r\n          }, {})\r\n          : historicalData[activeTab];\r\n\r\n      chart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: Object.keys(filteredData),\r\n          datasets: [\r\n            {\r\n              label: datasetLabel,\r\n              data: Object.values(filteredData),\r\n              borderColor: activeTab === 'cases' ? 'cyan'\r\n                : activeTab === 'recovered' ? 'green'\r\n                : 'red',\r\n              fill: true,\r\n              backgroundColor: activeTab === 'cases' ? 'lightblue'\r\n                : activeTab === 'recovered' ? 'yellow'\r\n                : 'gray',\r\n            },\r\n          ],\r\n        },\r\n        options: {},\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (chart) {\r\n        chart.destroy();\r\n      }\r\n    };\r\n  }, [historicalData, activeTab]);\r\n  \r\n  return (\r\n    <div style={{ width: '100%', height: '500px' }}>\r\n      <canvas id=\"myChart\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}