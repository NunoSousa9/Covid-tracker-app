{"ast":null,"code":"const getTotalData = async () => {\n  try {\n    const totalResponse = await fetch('https://disease.sh/v3/covid-19/all');\n    const totalData = await totalResponse.json();\n    return totalData;\n  } catch (error) {\n    console.error('Error fetching total data:', error);\n    throw new Error('Failed to fetch total data');\n  }\n};\nconst getCountryData = async () => {\n  try {\n    const countriesResponse = await fetch('https://disease.sh/v3/covid-19/countries');\n    const countriesData = await countriesResponse.json();\n    return countriesData;\n  } catch (error) {\n    console.error('Error fetching country data:', error);\n    throw new Error('Failed to fetch country data');\n  }\n};\nconst getHistoricalData = async () => {\n  try {\n    const response = await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=all');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching historical data:', error);\n    throw new Error('Failed to fetch historical data');\n  }\n};\nconst getVaccineData = async () => {\n  try {\n    const response = await fetch(`https://disease.sh/v3/covid-19/vaccine/coverage/countries?lastdays=1115`);\n    const vaccineData = await response.json();\n    return vaccineData;\n  } catch (error) {\n    console.error('Error fetching vaccine data:', error);\n    throw new Error('Failed to fetch vaccine data');\n  }\n};\nexport { getTotalData, getCountryData, getHistoricalData, getVaccineData };","map":{"version":3,"names":["getTotalData","totalResponse","fetch","totalData","json","error","console","Error","getCountryData","countriesResponse","countriesData","getHistoricalData","response","data","getVaccineData","vaccineData"],"sources":["C:/Users/nnsou/OneDrive/Ambiente de Trabalho/Git/Covid/covid-visualizer2/src/API/GetAPI.jsx"],"sourcesContent":["const getTotalData = async () => {\r\n    try {\r\n      const totalResponse = await fetch('https://disease.sh/v3/covid-19/all');\r\n      const totalData = await totalResponse.json();\r\n      return totalData;\r\n    } catch (error) {\r\n      console.error('Error fetching total data:', error);\r\n      throw new Error('Failed to fetch total data');\r\n    }\r\n  };\r\n  \r\n  const getCountryData = async () => {\r\n    try {\r\n      const countriesResponse = await fetch('https://disease.sh/v3/covid-19/countries');\r\n      const countriesData = await countriesResponse.json();\r\n      return countriesData;\r\n    } catch (error) {\r\n      console.error('Error fetching country data:', error);\r\n      throw new Error('Failed to fetch country data');\r\n    }\r\n  };\r\n  \r\n  const getHistoricalData = async () => {\r\n    try {\r\n      const response = await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=all');\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching historical data:', error);\r\n      throw new Error('Failed to fetch historical data');\r\n    }\r\n  };\r\n\r\n  const getVaccineData = async () => {\r\n    try {\r\n      const response = await fetch(`https://disease.sh/v3/covid-19/vaccine/coverage/countries?lastdays=1115`);\r\n      const vaccineData = await response.json();\r\n      return vaccineData;\r\n    } catch (error) {\r\n      console.error('Error fetching vaccine data:', error);\r\n      throw new Error('Failed to fetch vaccine data');\r\n    }\r\n  };\r\n  \r\n  export { getTotalData, getCountryData, getHistoricalData, getVaccineData };\r\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAI;IACF,MAAMC,aAAa,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;IACvE,MAAMC,SAAS,GAAG,MAAMF,aAAa,CAACG,IAAI,CAAC,CAAC;IAC5C,OAAOD,SAAS;EAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC;EAC/C;AACF,CAAC;AAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMC,iBAAiB,GAAG,MAAMP,KAAK,CAAC,0CAA0C,CAAC;IACjF,MAAMQ,aAAa,GAAG,MAAMD,iBAAiB,CAACL,IAAI,CAAC,CAAC;IACpD,OAAOM,aAAa;EACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAM,IAAIE,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC;AAED,MAAMI,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,4DAA4D,CAAC;IAC1F,MAAMW,IAAI,GAAG,MAAMD,QAAQ,CAACR,IAAI,CAAC,CAAC;IAClC,OAAOS,IAAI;EACb,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAM,IAAIE,KAAK,CAAC,iCAAiC,CAAC;EACpD;AACF,CAAC;AAED,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAMV,KAAK,CAAE,yEAAwE,CAAC;IACvG,MAAMa,WAAW,GAAG,MAAMH,QAAQ,CAACR,IAAI,CAAC,CAAC;IACzC,OAAOW,WAAW;EACpB,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAM,IAAIE,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC;AAED,SAASP,YAAY,EAAEQ,cAAc,EAAEG,iBAAiB,EAAEG,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}